#include<bits/stdc++.h>
#define ll long long;
using namespace std;
const int MOD =(int)1e9+7;
long long dp[1000001];
void swapNumber(int &a, int &b) {
	int c;
	c=a^b;
	a=c^a;
	b=c^b;
}

void kthbit(int n,int k)//Kth bit set or not
{
	if(n&(1<<(k-1))!=0)
	{
		cout<<"YES";
	}
	else
	{
		return "NO";
	}
}
void kthbit2(int n,int k)
{
	if(((n>>(k-1))&1)==1)
	{
		cout<<"YES";
	}
	else
	{
		cout<<"NO";
	}
}
//count set bits
int countsetbits(int n)
{

	int res=0;
	while(n>0)
	{
		if(n%2!=0)
		{
			res++;
		}
		n=n/2;
	}
}
//method 2
int countsetbits2(int n)
{
	while(n>0)
	{
		if((n&1)==1)
		{
			res++;

		}//res=res+(n&1);
		n=n>>1;
	}
}
//Brain Kerningams Algorithm

int countbits(int n)
{
	int res=0;
	while(n>0)
	{
		n=(n&(n-1));
		res++;
	}
	return res;
}

Problem:
Range queries:

#include<bits/stdc++.h>
using namespace std;
int main()
{
	int n;
	cin >> n;
	vector<int>arr(n);
	for(int i=0;i<n;i++)
	{
		cin >> arr[i];
	}
	vector<vector<int>>p(n,vector<int>(32,0));
	
	for(int i=0;i<n;i++)
	{
		int x = arr[i];
		for(int j=0;j<32;j++)
		{
			//cout << ((x>>j)&1) << " " << j << endl;
			if((x>>j)&1)
			{

				p[i][j] = 1;

			}
		}
		//cout << "*" << endl;
	}
	for(int i=0;i<32;i++)
	{
		for(int j=1;j<n;j++)
		{
			p[j][i] = p[j][i]+p[j-1][i];
		}
	}
	
	int q;
	cin >> q;
	while(q--)
	{
		int l,r;
		cin >> l >> r;
		int x = r-l+1;
		int ans=0;
		if(l==0)
		{
			for(int i=0;i<32;i++)
			{
				if(p[r][i]==x)
				{
					ans = ans|(1<<i);
				}
			}
		}
		else
		{
			for(int i=0;i<32;i++)
			{
				if(p[r][i]-p[l-1][i]==x)
				{
					ans = ans|(1<<i);
				}
			}
		}
		cout << ans << endl;
	}
}
